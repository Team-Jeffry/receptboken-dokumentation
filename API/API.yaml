openapi: 3.0.0
info:
  version: 1.0.0
  title: Team Jeffry - Receptboken
  description: A collaborative cookbook with suggestions based on what you have in the fridge.
  
servers:
  - url: http://34.91.128.48/api/v1
  
security:
  - BasicAuth: []
  
paths:
  /recipe/save:
    post:
      description: Save a recipe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                instruction:
                  type: string
                time:
                  type: integer
                ingredients:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                categoryNames:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Successfully saved a new recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '400':
          $ref: '#/components/responses/400Error'
          
  /recipe/get:
    post:
      description: Returns a list of recipes matching search data in requestbody.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipeName: 
                  type: string
                categoryNames:
                  type: array
                  items: 
                    type: string
                time:
                  type: integer
                  
      responses:
        '200':
          description: Successfully returned information about a recipe or multiple recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        
        '400':
          $ref: '#/components/responses/400Error'
          
  /recipe/suggest:
    post:
      description: Returns recipe suggestions based on given ingredients. Sorted by amount of matched ingredients.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
      
      responses:
        '200':
          description: Successfully returned recipe suggestion(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        '400':
          $ref: '#/components/responses/400Error'
          
  /ingredient/all:
    get:
      description: Returns a list of all ingredients.
      responses:
        '200':
          description: Successfully returned all ingredients.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
        '400':
          $ref: '#/components/responses/400Error'
          
  /category/all:
    get:
      description: Returns a list of all categories.
      responses:
        '200':
          description: Successfully returned all categories.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '400':
          $ref: '#/components/responses/400Error'
          
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      
  parameters:
    PageLimit: 
      name: pageLimit
      in: query
      description: Limits the number of items on a page
      schema:
        type: integer
        
    PageNumber:
      name: pageNumber
      in: query
      description: Specifies the page number of the items to be displayed
      schema:
        type: integer
        
  schemas:
    Recipe:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
        description:
          type: string
        instructions:
          type: string
        time:
          type: integer
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
            
    Category:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
        description:
          type: string
  
    Ingredient:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
        description:
          type: string
          
    ObjectId:
      type: object
      properties:
        timestamp:
          type: string
        date:
          type: string

  responses:
    400Error:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
